public final class io/github/cfraser/graphguard/plugin/Schema {
	public final field graphs Ljava/util/Set;
	public final field nodes Ljava/util/Map;
	public final field relationships Ljava/util/Map;
	public fun <init> (Ljava/lang/String;)V
	public final fun component1 ()Ljava/util/Set;
	public final fun copy (Ljava/util/Set;)Lio/github/cfraser/graphguard/plugin/Schema;
	public static synthetic fun copy$default (Lio/github/cfraser/graphguard/plugin/Schema;Ljava/util/Set;ILjava/lang/Object;)Lio/github/cfraser/graphguard/plugin/Schema;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/plugin/Schema$Graph : java/lang/Record {
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/util/Set;
	public final fun copy (Ljava/lang/String;Ljava/util/Set;)Lio/github/cfraser/graphguard/plugin/Schema$Graph;
	public static synthetic fun copy$default (Lio/github/cfraser/graphguard/plugin/Schema$Graph;Ljava/lang/String;Ljava/util/Set;ILjava/lang/Object;)Lio/github/cfraser/graphguard/plugin/Schema$Graph;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun name ()Ljava/lang/String;
	public final fun nodes ()Ljava/util/Set;
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/plugin/Schema$Node : java/lang/Record {
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/util/Set;
	public final fun component3 ()Ljava/util/Set;
	public final fun copy (Ljava/lang/String;Ljava/util/Set;Ljava/util/Set;)Lio/github/cfraser/graphguard/plugin/Schema$Node;
	public static synthetic fun copy$default (Lio/github/cfraser/graphguard/plugin/Schema$Node;Ljava/lang/String;Ljava/util/Set;Ljava/util/Set;ILjava/lang/Object;)Lio/github/cfraser/graphguard/plugin/Schema$Node;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun name ()Ljava/lang/String;
	public final fun properties ()Ljava/util/Set;
	public final fun relationships ()Ljava/util/Set;
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/plugin/Schema$Property : java/lang/Record {
	public final fun allowsNullable ()Z
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Lio/github/cfraser/graphguard/plugin/Schema$Property$Type;
	public final fun component3 ()Z
	public final fun component4 ()Z
	public final fun component5 ()Z
	public final fun copy (Ljava/lang/String;Lio/github/cfraser/graphguard/plugin/Schema$Property$Type;ZZZ)Lio/github/cfraser/graphguard/plugin/Schema$Property;
	public static synthetic fun copy$default (Lio/github/cfraser/graphguard/plugin/Schema$Property;Ljava/lang/String;Lio/github/cfraser/graphguard/plugin/Schema$Property$Type;ZZZILjava/lang/Object;)Lio/github/cfraser/graphguard/plugin/Schema$Property;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun isList ()Z
	public final fun isNullable ()Z
	public final fun name ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
	public final fun type ()Lio/github/cfraser/graphguard/plugin/Schema$Property$Type;
}

public abstract class io/github/cfraser/graphguard/plugin/Schema$Property$Type {
	public synthetic fun <init> (Lkotlin/reflect/KClass;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/plugin/Schema$Property$Type$Any : io/github/cfraser/graphguard/plugin/Schema$Property$Type {
	public static final field INSTANCE Lio/github/cfraser/graphguard/plugin/Schema$Property$Type$Any;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/plugin/Schema$Property$Type$Boolean : io/github/cfraser/graphguard/plugin/Schema$Property$Type {
	public static final field INSTANCE Lio/github/cfraser/graphguard/plugin/Schema$Property$Type$Boolean;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/plugin/Schema$Property$Type$Date : io/github/cfraser/graphguard/plugin/Schema$Property$Type {
	public static final field INSTANCE Lio/github/cfraser/graphguard/plugin/Schema$Property$Type$Date;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/plugin/Schema$Property$Type$DateTime : io/github/cfraser/graphguard/plugin/Schema$Property$Type {
	public static final field INSTANCE Lio/github/cfraser/graphguard/plugin/Schema$Property$Type$DateTime;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/plugin/Schema$Property$Type$Duration : io/github/cfraser/graphguard/plugin/Schema$Property$Type {
	public static final field INSTANCE Lio/github/cfraser/graphguard/plugin/Schema$Property$Type$Duration;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/plugin/Schema$Property$Type$Float : io/github/cfraser/graphguard/plugin/Schema$Property$Type {
	public static final field INSTANCE Lio/github/cfraser/graphguard/plugin/Schema$Property$Type$Float;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/plugin/Schema$Property$Type$Integer : io/github/cfraser/graphguard/plugin/Schema$Property$Type {
	public static final field INSTANCE Lio/github/cfraser/graphguard/plugin/Schema$Property$Type$Integer;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/plugin/Schema$Property$Type$LocalDateTime : io/github/cfraser/graphguard/plugin/Schema$Property$Type {
	public static final field INSTANCE Lio/github/cfraser/graphguard/plugin/Schema$Property$Type$LocalDateTime;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/plugin/Schema$Property$Type$LocalTime : io/github/cfraser/graphguard/plugin/Schema$Property$Type {
	public static final field INSTANCE Lio/github/cfraser/graphguard/plugin/Schema$Property$Type$LocalTime;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/plugin/Schema$Property$Type$String : io/github/cfraser/graphguard/plugin/Schema$Property$Type {
	public static final field INSTANCE Lio/github/cfraser/graphguard/plugin/Schema$Property$Type$String;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/plugin/Schema$Property$Type$Time : io/github/cfraser/graphguard/plugin/Schema$Property$Type {
	public static final field INSTANCE Lio/github/cfraser/graphguard/plugin/Schema$Property$Type$Time;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/plugin/Schema$Relationship : java/lang/Record {
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Z
	public final fun component5 ()Ljava/util/Set;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLjava/util/Set;)Lio/github/cfraser/graphguard/plugin/Schema$Relationship;
	public static synthetic fun copy$default (Lio/github/cfraser/graphguard/plugin/Schema$Relationship;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLjava/util/Set;ILjava/lang/Object;)Lio/github/cfraser/graphguard/plugin/Schema$Relationship;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun isDirected ()Z
	public final fun name ()Ljava/lang/String;
	public final fun properties ()Ljava/util/Set;
	public final fun source ()Ljava/lang/String;
	public final fun target ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/plugin/Schema$Relationship$Id : java/lang/Record {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lio/github/cfraser/graphguard/plugin/Schema$Relationship$Id;
	public static synthetic fun copy$default (Lio/github/cfraser/graphguard/plugin/Schema$Relationship$Id;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lio/github/cfraser/graphguard/plugin/Schema$Relationship$Id;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun name ()Ljava/lang/String;
	public final fun source ()Ljava/lang/String;
	public final fun target ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/plugin/Schema$Validator : io/github/cfraser/graphguard/Server$Plugin {
	public fun <init> (Lio/github/cfraser/graphguard/plugin/Schema;)V
	public fun <init> (Lio/github/cfraser/graphguard/plugin/Schema;Ljava/lang/Long;)V
	public synthetic fun <init> (Lio/github/cfraser/graphguard/plugin/Schema;Ljava/lang/Long;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun intercept (Lio/github/cfraser/graphguard/Bolt$Message;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun observe (Lio/github/cfraser/graphguard/Server$Event;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun then (Lio/github/cfraser/graphguard/Server$Plugin;)Lio/github/cfraser/graphguard/Server$Plugin;
}

