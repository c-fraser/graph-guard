public final class io/github/cfraser/graphguard/Bolt {
	public static final field INSTANCE Lio/github/cfraser/graphguard/Bolt;
}

public final class io/github/cfraser/graphguard/Bolt$Begin : java/lang/Record, io/github/cfraser/graphguard/Bolt$Request {
	public fun <init> (Ljava/util/Map;)V
	public fun and (Lio/github/cfraser/graphguard/Bolt$Message;)Lio/github/cfraser/graphguard/Bolt$Messages;
	public final fun component1 ()Ljava/util/Map;
	public final fun copy (Ljava/util/Map;)Lio/github/cfraser/graphguard/Bolt$Begin;
	public static synthetic fun copy$default (Lio/github/cfraser/graphguard/Bolt$Begin;Ljava/util/Map;ILjava/lang/Object;)Lio/github/cfraser/graphguard/Bolt$Begin;
	public fun equals (Ljava/lang/Object;)Z
	public final fun extra ()Ljava/util/Map;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/Bolt$Commit : io/github/cfraser/graphguard/Bolt$Request {
	public static final field INSTANCE Lio/github/cfraser/graphguard/Bolt$Commit;
	public fun and (Lio/github/cfraser/graphguard/Bolt$Message;)Lio/github/cfraser/graphguard/Bolt$Messages;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/Bolt$Discard : java/lang/Record, io/github/cfraser/graphguard/Bolt$Request {
	public fun <init> (Ljava/util/Map;)V
	public fun and (Lio/github/cfraser/graphguard/Bolt$Message;)Lio/github/cfraser/graphguard/Bolt$Messages;
	public final fun component1 ()Ljava/util/Map;
	public final fun copy (Ljava/util/Map;)Lio/github/cfraser/graphguard/Bolt$Discard;
	public static synthetic fun copy$default (Lio/github/cfraser/graphguard/Bolt$Discard;Ljava/util/Map;ILjava/lang/Object;)Lio/github/cfraser/graphguard/Bolt$Discard;
	public fun equals (Ljava/lang/Object;)Z
	public final fun extra ()Ljava/util/Map;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/Bolt$Failure : java/lang/Record, io/github/cfraser/graphguard/Bolt$Response {
	public fun <init> (Ljava/util/Map;)V
	public fun and (Lio/github/cfraser/graphguard/Bolt$Message;)Lio/github/cfraser/graphguard/Bolt$Messages;
	public final fun component1 ()Ljava/util/Map;
	public final fun copy (Ljava/util/Map;)Lio/github/cfraser/graphguard/Bolt$Failure;
	public static synthetic fun copy$default (Lio/github/cfraser/graphguard/Bolt$Failure;Ljava/util/Map;ILjava/lang/Object;)Lio/github/cfraser/graphguard/Bolt$Failure;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun metadata ()Ljava/util/Map;
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/Bolt$Goodbye : io/github/cfraser/graphguard/Bolt$Request {
	public static final field INSTANCE Lio/github/cfraser/graphguard/Bolt$Goodbye;
	public fun and (Lio/github/cfraser/graphguard/Bolt$Message;)Lio/github/cfraser/graphguard/Bolt$Messages;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/Bolt$Hello : java/lang/Record, io/github/cfraser/graphguard/Bolt$Request {
	public fun <init> (Ljava/util/Map;)V
	public fun and (Lio/github/cfraser/graphguard/Bolt$Message;)Lio/github/cfraser/graphguard/Bolt$Messages;
	public final fun component1 ()Ljava/util/Map;
	public final fun copy (Ljava/util/Map;)Lio/github/cfraser/graphguard/Bolt$Hello;
	public static synthetic fun copy$default (Lio/github/cfraser/graphguard/Bolt$Hello;Ljava/util/Map;ILjava/lang/Object;)Lio/github/cfraser/graphguard/Bolt$Hello;
	public fun equals (Ljava/lang/Object;)Z
	public final fun extra ()Ljava/util/Map;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/Bolt$Ignored : io/github/cfraser/graphguard/Bolt$Response {
	public static final field INSTANCE Lio/github/cfraser/graphguard/Bolt$Ignored;
	public fun and (Lio/github/cfraser/graphguard/Bolt$Message;)Lio/github/cfraser/graphguard/Bolt$Messages;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/Bolt$Logoff : io/github/cfraser/graphguard/Bolt$Request {
	public static final field INSTANCE Lio/github/cfraser/graphguard/Bolt$Logoff;
	public fun and (Lio/github/cfraser/graphguard/Bolt$Message;)Lio/github/cfraser/graphguard/Bolt$Messages;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/Bolt$Logon : java/lang/Record, io/github/cfraser/graphguard/Bolt$Request {
	public fun <init> (Ljava/util/Map;)V
	public fun and (Lio/github/cfraser/graphguard/Bolt$Message;)Lio/github/cfraser/graphguard/Bolt$Messages;
	public final fun auth ()Ljava/util/Map;
	public final fun component1 ()Ljava/util/Map;
	public final fun copy (Ljava/util/Map;)Lio/github/cfraser/graphguard/Bolt$Logon;
	public static synthetic fun copy$default (Lio/github/cfraser/graphguard/Bolt$Logon;Ljava/util/Map;ILjava/lang/Object;)Lio/github/cfraser/graphguard/Bolt$Logon;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class io/github/cfraser/graphguard/Bolt$Message {
	public abstract fun and (Lio/github/cfraser/graphguard/Bolt$Message;)Lio/github/cfraser/graphguard/Bolt$Messages;
}

public final class io/github/cfraser/graphguard/Bolt$Message$DefaultImpls {
	public static fun and (Lio/github/cfraser/graphguard/Bolt$Message;Lio/github/cfraser/graphguard/Bolt$Message;)Lio/github/cfraser/graphguard/Bolt$Messages;
}

public final class io/github/cfraser/graphguard/Bolt$Messages : java/lang/Record, io/github/cfraser/graphguard/Bolt$Message {
	public fun and (Lio/github/cfraser/graphguard/Bolt$Message;)Lio/github/cfraser/graphguard/Bolt$Messages;
	public final fun component1 ()Ljava/util/List;
	public final fun copy (Ljava/util/List;)Lio/github/cfraser/graphguard/Bolt$Messages;
	public static synthetic fun copy$default (Lio/github/cfraser/graphguard/Bolt$Messages;Ljava/util/List;ILjava/lang/Object;)Lio/github/cfraser/graphguard/Bolt$Messages;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun messages ()Ljava/util/List;
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/Bolt$Pull : java/lang/Record, io/github/cfraser/graphguard/Bolt$Request {
	public fun <init> (Ljava/util/Map;)V
	public fun and (Lio/github/cfraser/graphguard/Bolt$Message;)Lio/github/cfraser/graphguard/Bolt$Messages;
	public final fun component1 ()Ljava/util/Map;
	public final fun copy (Ljava/util/Map;)Lio/github/cfraser/graphguard/Bolt$Pull;
	public static synthetic fun copy$default (Lio/github/cfraser/graphguard/Bolt$Pull;Ljava/util/Map;ILjava/lang/Object;)Lio/github/cfraser/graphguard/Bolt$Pull;
	public fun equals (Ljava/lang/Object;)Z
	public final fun extra ()Ljava/util/Map;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/Bolt$Record : java/lang/Record, io/github/cfraser/graphguard/Bolt$Response {
	public fun <init> (Ljava/util/List;)V
	public fun and (Lio/github/cfraser/graphguard/Bolt$Message;)Lio/github/cfraser/graphguard/Bolt$Messages;
	public final fun component1 ()Ljava/util/List;
	public final fun copy (Ljava/util/List;)Lio/github/cfraser/graphguard/Bolt$Record;
	public static synthetic fun copy$default (Lio/github/cfraser/graphguard/Bolt$Record;Ljava/util/List;ILjava/lang/Object;)Lio/github/cfraser/graphguard/Bolt$Record;
	public final fun data ()Ljava/util/List;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class io/github/cfraser/graphguard/Bolt$Request : io/github/cfraser/graphguard/Bolt$Message {
}

public final class io/github/cfraser/graphguard/Bolt$Request$DefaultImpls {
	public static fun and (Lio/github/cfraser/graphguard/Bolt$Request;Lio/github/cfraser/graphguard/Bolt$Message;)Lio/github/cfraser/graphguard/Bolt$Messages;
}

public final class io/github/cfraser/graphguard/Bolt$Reset : io/github/cfraser/graphguard/Bolt$Request {
	public static final field INSTANCE Lio/github/cfraser/graphguard/Bolt$Reset;
	public fun and (Lio/github/cfraser/graphguard/Bolt$Message;)Lio/github/cfraser/graphguard/Bolt$Messages;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class io/github/cfraser/graphguard/Bolt$Response : io/github/cfraser/graphguard/Bolt$Message {
}

public final class io/github/cfraser/graphguard/Bolt$Response$DefaultImpls {
	public static fun and (Lio/github/cfraser/graphguard/Bolt$Response;Lio/github/cfraser/graphguard/Bolt$Message;)Lio/github/cfraser/graphguard/Bolt$Messages;
}

public final class io/github/cfraser/graphguard/Bolt$Rollback : io/github/cfraser/graphguard/Bolt$Request {
	public static final field INSTANCE Lio/github/cfraser/graphguard/Bolt$Rollback;
	public fun and (Lio/github/cfraser/graphguard/Bolt$Message;)Lio/github/cfraser/graphguard/Bolt$Messages;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/Bolt$Run : java/lang/Record, io/github/cfraser/graphguard/Bolt$Request {
	public fun <init> (Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;)V
	public fun and (Lio/github/cfraser/graphguard/Bolt$Message;)Lio/github/cfraser/graphguard/Bolt$Messages;
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/util/Map;
	public final fun component3 ()Ljava/util/Map;
	public final fun copy (Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;)Lio/github/cfraser/graphguard/Bolt$Run;
	public static synthetic fun copy$default (Lio/github/cfraser/graphguard/Bolt$Run;Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;ILjava/lang/Object;)Lio/github/cfraser/graphguard/Bolt$Run;
	public fun equals (Ljava/lang/Object;)Z
	public final fun extra ()Ljava/util/Map;
	public fun hashCode ()I
	public final fun parameters ()Ljava/util/Map;
	public final fun query ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/Bolt$Session {
	public static final synthetic fun box-impl (Ljava/lang/String;)Lio/github/cfraser/graphguard/Bolt$Session;
	public static fun constructor-impl (Ljava/lang/String;)Ljava/lang/String;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Ljava/lang/String;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Ljava/lang/String;Ljava/lang/String;)Z
	public final fun getId ()Ljava/lang/String;
	public fun hashCode ()I
	public static fun hashCode-impl (Ljava/lang/String;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Ljava/lang/String;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/Bolt$Success : java/lang/Record, io/github/cfraser/graphguard/Bolt$Response {
	public fun <init> (Ljava/util/Map;)V
	public fun and (Lio/github/cfraser/graphguard/Bolt$Message;)Lio/github/cfraser/graphguard/Bolt$Messages;
	public final fun component1 ()Ljava/util/Map;
	public final fun copy (Ljava/util/Map;)Lio/github/cfraser/graphguard/Bolt$Success;
	public static synthetic fun copy$default (Lio/github/cfraser/graphguard/Bolt$Success;Ljava/util/Map;ILjava/lang/Object;)Lio/github/cfraser/graphguard/Bolt$Success;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun metadata ()Ljava/util/Map;
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/Bolt$Telemetry : java/lang/Record, io/github/cfraser/graphguard/Bolt$Request {
	public fun <init> (J)V
	public fun and (Lio/github/cfraser/graphguard/Bolt$Message;)Lio/github/cfraser/graphguard/Bolt$Messages;
	public final fun api ()J
	public final fun component1 ()J
	public final fun copy (J)Lio/github/cfraser/graphguard/Bolt$Telemetry;
	public static synthetic fun copy$default (Lio/github/cfraser/graphguard/Bolt$Telemetry;JILjava/lang/Object;)Lio/github/cfraser/graphguard/Bolt$Telemetry;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/Server : java/lang/Runnable {
	public fun <init> (Ljava/net/URI;)V
	public fun <init> (Ljava/net/URI;Lio/github/cfraser/graphguard/Server$Plugin;)V
	public fun <init> (Ljava/net/URI;Lio/github/cfraser/graphguard/Server$Plugin;Ljava/net/InetSocketAddress;)V
	public fun <init> (Ljava/net/URI;Lio/github/cfraser/graphguard/Server$Plugin;Ljava/net/InetSocketAddress;Ljava/lang/Integer;)V
	public synthetic fun <init> (Ljava/net/URI;Lio/github/cfraser/graphguard/Server$Plugin;Ljava/net/InetSocketAddress;Ljava/lang/Integer;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getAddress ()Ljava/net/InetSocketAddress;
	public final fun getGraph ()Ljava/net/URI;
	public fun run ()V
}

public final class io/github/cfraser/graphguard/Server$Connected : java/lang/Record, io/github/cfraser/graphguard/Server$Event {
	public fun <init> (Lio/github/cfraser/graphguard/Server$Connection;)V
	public final fun component1 ()Lio/github/cfraser/graphguard/Server$Connection;
	public final fun connection ()Lio/github/cfraser/graphguard/Server$Connection;
	public final fun copy (Lio/github/cfraser/graphguard/Server$Connection;)Lio/github/cfraser/graphguard/Server$Connected;
	public static synthetic fun copy$default (Lio/github/cfraser/graphguard/Server$Connected;Lio/github/cfraser/graphguard/Server$Connection;ILjava/lang/Object;)Lio/github/cfraser/graphguard/Server$Connected;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class io/github/cfraser/graphguard/Server$Connection {
	public abstract fun getAddress ()Ljava/net/InetSocketAddress;
}

public final class io/github/cfraser/graphguard/Server$Connection$Client : java/lang/Record, io/github/cfraser/graphguard/Server$Connection {
	public fun <init> (Ljava/net/InetSocketAddress;)V
	public fun address ()Ljava/net/InetSocketAddress;
	public final fun component1 ()Ljava/net/InetSocketAddress;
	public final fun copy (Ljava/net/InetSocketAddress;)Lio/github/cfraser/graphguard/Server$Connection$Client;
	public static synthetic fun copy$default (Lio/github/cfraser/graphguard/Server$Connection$Client;Ljava/net/InetSocketAddress;ILjava/lang/Object;)Lio/github/cfraser/graphguard/Server$Connection$Client;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getAddress ()Ljava/net/InetSocketAddress;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/Server$Connection$Graph : java/lang/Record, io/github/cfraser/graphguard/Server$Connection {
	public fun <init> (Ljava/net/InetSocketAddress;)V
	public fun address ()Ljava/net/InetSocketAddress;
	public final fun component1 ()Ljava/net/InetSocketAddress;
	public final fun copy (Ljava/net/InetSocketAddress;)Lio/github/cfraser/graphguard/Server$Connection$Graph;
	public static synthetic fun copy$default (Lio/github/cfraser/graphguard/Server$Connection$Graph;Ljava/net/InetSocketAddress;ILjava/lang/Object;)Lio/github/cfraser/graphguard/Server$Connection$Graph;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getAddress ()Ljava/net/InetSocketAddress;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/Server$Disconnected : java/lang/Record, io/github/cfraser/graphguard/Server$Event {
	public fun <init> (Lio/github/cfraser/graphguard/Server$Connection;)V
	public final fun component1 ()Lio/github/cfraser/graphguard/Server$Connection;
	public final fun connection ()Lio/github/cfraser/graphguard/Server$Connection;
	public final fun copy (Lio/github/cfraser/graphguard/Server$Connection;)Lio/github/cfraser/graphguard/Server$Disconnected;
	public static synthetic fun copy$default (Lio/github/cfraser/graphguard/Server$Disconnected;Lio/github/cfraser/graphguard/Server$Connection;ILjava/lang/Object;)Lio/github/cfraser/graphguard/Server$Disconnected;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class io/github/cfraser/graphguard/Server$Event {
}

public abstract interface class io/github/cfraser/graphguard/Server$Plugin {
	public abstract fun intercept-zufs0ZA (Ljava/lang/String;Lio/github/cfraser/graphguard/Bolt$Message;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun observe (Lio/github/cfraser/graphguard/Server$Event;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun then (Lio/github/cfraser/graphguard/Server$Plugin;)Lio/github/cfraser/graphguard/Server$Plugin;
}

public abstract class io/github/cfraser/graphguard/Server$Plugin$Async : io/github/cfraser/graphguard/Server$Plugin {
	public fun <init> ()V
	public final fun intercept-zufs0ZA (Ljava/lang/String;Lio/github/cfraser/graphguard/Bolt$Message;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun interceptAsync (Ljava/lang/String;Lio/github/cfraser/graphguard/Bolt$Message;)Ljava/util/concurrent/CompletableFuture;
	public final fun observe (Lio/github/cfraser/graphguard/Server$Event;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun observeAsync (Lio/github/cfraser/graphguard/Server$Event;)Ljava/util/concurrent/CompletableFuture;
	public fun then (Lio/github/cfraser/graphguard/Server$Plugin;)Lio/github/cfraser/graphguard/Server$Plugin;
}

public final class io/github/cfraser/graphguard/Server$Plugin$Builder {
	public final fun intercept (Lkotlin/jvm/functions/Function3;)V
	public final fun observe (Lkotlin/jvm/functions/Function2;)V
}

public final class io/github/cfraser/graphguard/Server$Plugin$DSL {
	public static final field INSTANCE Lio/github/cfraser/graphguard/Server$Plugin$DSL;
	public final fun plugin (Lkotlin/jvm/functions/Function1;)Lio/github/cfraser/graphguard/Server$Plugin;
}

public final class io/github/cfraser/graphguard/Server$Plugin$DefaultImpls {
	public static fun then (Lio/github/cfraser/graphguard/Server$Plugin;Lio/github/cfraser/graphguard/Server$Plugin;)Lio/github/cfraser/graphguard/Server$Plugin;
}

public final class io/github/cfraser/graphguard/Server$Proxied : java/lang/Record, io/github/cfraser/graphguard/Server$Event {
	public synthetic fun <init> (Ljava/lang/String;Lio/github/cfraser/graphguard/Server$Connection;Lio/github/cfraser/graphguard/Bolt$Message;Lio/github/cfraser/graphguard/Server$Connection;Lio/github/cfraser/graphguard/Bolt$Message;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1-S-s-fls ()Ljava/lang/String;
	public final fun component2 ()Lio/github/cfraser/graphguard/Server$Connection;
	public final fun component3 ()Lio/github/cfraser/graphguard/Bolt$Message;
	public final fun component4 ()Lio/github/cfraser/graphguard/Server$Connection;
	public final fun component5 ()Lio/github/cfraser/graphguard/Bolt$Message;
	public final fun copy-jy18_CQ (Ljava/lang/String;Lio/github/cfraser/graphguard/Server$Connection;Lio/github/cfraser/graphguard/Bolt$Message;Lio/github/cfraser/graphguard/Server$Connection;Lio/github/cfraser/graphguard/Bolt$Message;)Lio/github/cfraser/graphguard/Server$Proxied;
	public static synthetic fun copy-jy18_CQ$default (Lio/github/cfraser/graphguard/Server$Proxied;Ljava/lang/String;Lio/github/cfraser/graphguard/Server$Connection;Lio/github/cfraser/graphguard/Bolt$Message;Lio/github/cfraser/graphguard/Server$Connection;Lio/github/cfraser/graphguard/Bolt$Message;ILjava/lang/Object;)Lio/github/cfraser/graphguard/Server$Proxied;
	public final fun destination ()Lio/github/cfraser/graphguard/Server$Connection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun received ()Lio/github/cfraser/graphguard/Bolt$Message;
	public final fun sent ()Lio/github/cfraser/graphguard/Bolt$Message;
	public final fun session ()Ljava/lang/String;
	public final fun source ()Lio/github/cfraser/graphguard/Server$Connection;
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/Server$Started : io/github/cfraser/graphguard/Server$Event {
	public static final field INSTANCE Lio/github/cfraser/graphguard/Server$Started;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/Server$Stopped : io/github/cfraser/graphguard/Server$Event {
	public static final field INSTANCE Lio/github/cfraser/graphguard/Server$Stopped;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/plugin/Schema : java/lang/Record, io/github/cfraser/graphguard/plugin/Validator$Rule {
	public fun <init> (Ljava/lang/String;)V
	public final fun component1 ()Ljava/util/List;
	public final fun copy (Ljava/util/List;)Lio/github/cfraser/graphguard/plugin/Schema;
	public static synthetic fun copy$default (Lio/github/cfraser/graphguard/plugin/Schema;Ljava/util/List;ILjava/lang/Object;)Lio/github/cfraser/graphguard/plugin/Schema;
	public fun equals (Ljava/lang/Object;)Z
	public final fun graphs ()Ljava/util/List;
	public fun hashCode ()I
	public fun then (Lio/github/cfraser/graphguard/plugin/Validator$Rule;)Lio/github/cfraser/graphguard/plugin/Validator$Rule;
	public fun toString ()Ljava/lang/String;
	public fun validate-1eTvv0c (Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/plugin/Schema$Builder {
	public fun <init> ()V
	public final fun build ()Lio/github/cfraser/graphguard/plugin/Schema;
	public final fun graph (Lio/github/cfraser/graphguard/plugin/Schema$Graph;)Lio/github/cfraser/graphguard/plugin/Schema$Builder;
}

public final class io/github/cfraser/graphguard/plugin/Schema$DSL {
	public static final field INSTANCE Lio/github/cfraser/graphguard/plugin/Schema$DSL;
	public final fun graph (Lio/github/cfraser/graphguard/plugin/Schema$Builder;Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lio/github/cfraser/graphguard/plugin/Schema$Builder;
	public final fun node (Lio/github/cfraser/graphguard/plugin/Schema$Graph$Builder;Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lio/github/cfraser/graphguard/plugin/Schema$Graph$Builder;
	public final fun schema (Lkotlin/jvm/functions/Function1;)Lio/github/cfraser/graphguard/plugin/Schema;
}

public final class io/github/cfraser/graphguard/plugin/Schema$Graph : java/lang/Record {
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/util/List;
	public final fun copy (Ljava/lang/String;Ljava/util/List;)Lio/github/cfraser/graphguard/plugin/Schema$Graph;
	public static synthetic fun copy$default (Lio/github/cfraser/graphguard/plugin/Schema$Graph;Ljava/lang/String;Ljava/util/List;ILjava/lang/Object;)Lio/github/cfraser/graphguard/plugin/Schema$Graph;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun name ()Ljava/lang/String;
	public final fun nodes ()Ljava/util/List;
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/plugin/Schema$Graph$Builder {
	public fun <init> ()V
	public final fun build ()Lio/github/cfraser/graphguard/plugin/Schema$Graph;
	public final fun name (Ljava/lang/String;)Lio/github/cfraser/graphguard/plugin/Schema$Graph$Builder;
	public final fun node (Lio/github/cfraser/graphguard/plugin/Schema$Node;)Lio/github/cfraser/graphguard/plugin/Schema$Graph$Builder;
}

public final class io/github/cfraser/graphguard/plugin/Schema$Metadata : java/lang/Record {
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;)Lio/github/cfraser/graphguard/plugin/Schema$Metadata;
	public static synthetic fun copy$default (Lio/github/cfraser/graphguard/plugin/Schema$Metadata;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lio/github/cfraser/graphguard/plugin/Schema$Metadata;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun name ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
	public final fun value ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/plugin/Schema$Node : java/lang/Record {
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/util/List;
	public final fun component3 ()Ljava/util/List;
	public final fun component4 ()Ljava/util/List;
	public final fun copy (Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/List;)Lio/github/cfraser/graphguard/plugin/Schema$Node;
	public static synthetic fun copy$default (Lio/github/cfraser/graphguard/plugin/Schema$Node;Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/List;ILjava/lang/Object;)Lio/github/cfraser/graphguard/plugin/Schema$Node;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun metadata ()Ljava/util/List;
	public final fun name ()Ljava/lang/String;
	public final fun properties ()Ljava/util/List;
	public final fun relationships ()Ljava/util/List;
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/plugin/Schema$Node$Builder {
	public fun <init> ()V
	public final fun build ()Lio/github/cfraser/graphguard/plugin/Schema$Node;
	public final fun metadata (Lio/github/cfraser/graphguard/plugin/Schema$Metadata;)Lio/github/cfraser/graphguard/plugin/Schema$Node$Builder;
	public final fun name (Ljava/lang/String;)Lio/github/cfraser/graphguard/plugin/Schema$Node$Builder;
	public final fun property (Lio/github/cfraser/graphguard/plugin/Schema$Property;)Lio/github/cfraser/graphguard/plugin/Schema$Node$Builder;
	public final fun relationship (Lio/github/cfraser/graphguard/plugin/Schema$Relationship;)Lio/github/cfraser/graphguard/plugin/Schema$Node$Builder;
}

public final class io/github/cfraser/graphguard/plugin/Schema$Property : java/lang/Record {
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Lio/github/cfraser/graphguard/plugin/Schema$Property$Type;
	public final fun component3 ()Ljava/util/List;
	public final fun copy (Ljava/lang/String;Lio/github/cfraser/graphguard/plugin/Schema$Property$Type;Ljava/util/List;)Lio/github/cfraser/graphguard/plugin/Schema$Property;
	public static synthetic fun copy$default (Lio/github/cfraser/graphguard/plugin/Schema$Property;Ljava/lang/String;Lio/github/cfraser/graphguard/plugin/Schema$Property$Type;Ljava/util/List;ILjava/lang/Object;)Lio/github/cfraser/graphguard/plugin/Schema$Property;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun metadata ()Ljava/util/List;
	public final fun name ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
	public final fun type ()Lio/github/cfraser/graphguard/plugin/Schema$Property$Type;
}

public final class io/github/cfraser/graphguard/plugin/Schema$Property$Builder {
	public fun <init> ()V
	public final fun build ()Lio/github/cfraser/graphguard/plugin/Schema$Property;
	public final fun metadata (Lio/github/cfraser/graphguard/plugin/Schema$Metadata;)Lio/github/cfraser/graphguard/plugin/Schema$Property$Builder;
	public final fun name (Ljava/lang/String;)Lio/github/cfraser/graphguard/plugin/Schema$Property$Builder;
	public final fun type (Lio/github/cfraser/graphguard/plugin/Schema$Property$Type;)Lio/github/cfraser/graphguard/plugin/Schema$Property$Builder;
}

public abstract class io/github/cfraser/graphguard/plugin/Schema$Property$Type {
	public synthetic fun <init> (Lkotlin/reflect/KClass;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
}

public final class io/github/cfraser/graphguard/plugin/Schema$Property$Type$Any : io/github/cfraser/graphguard/plugin/Schema$Property$Type {
	public static final field INSTANCE Lio/github/cfraser/graphguard/plugin/Schema$Property$Type$Any;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/plugin/Schema$Property$Type$Boolean : io/github/cfraser/graphguard/plugin/Schema$Property$Type {
	public static final field INSTANCE Lio/github/cfraser/graphguard/plugin/Schema$Property$Type$Boolean;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/plugin/Schema$Property$Type$Date : io/github/cfraser/graphguard/plugin/Schema$Property$Type {
	public static final field INSTANCE Lio/github/cfraser/graphguard/plugin/Schema$Property$Type$Date;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/plugin/Schema$Property$Type$DateTime : io/github/cfraser/graphguard/plugin/Schema$Property$Type {
	public static final field INSTANCE Lio/github/cfraser/graphguard/plugin/Schema$Property$Type$DateTime;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/plugin/Schema$Property$Type$Duration : io/github/cfraser/graphguard/plugin/Schema$Property$Type {
	public static final field INSTANCE Lio/github/cfraser/graphguard/plugin/Schema$Property$Type$Duration;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/plugin/Schema$Property$Type$Float : io/github/cfraser/graphguard/plugin/Schema$Property$Type {
	public static final field INSTANCE Lio/github/cfraser/graphguard/plugin/Schema$Property$Type$Float;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/plugin/Schema$Property$Type$Integer : io/github/cfraser/graphguard/plugin/Schema$Property$Type {
	public static final field INSTANCE Lio/github/cfraser/graphguard/plugin/Schema$Property$Type$Integer;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/plugin/Schema$Property$Type$List : io/github/cfraser/graphguard/plugin/Schema$Property$Type {
	public fun <init> (Lio/github/cfraser/graphguard/plugin/Schema$Property$Type;)V
	public final fun component1 ()Lio/github/cfraser/graphguard/plugin/Schema$Property$Type;
	public final fun copy (Lio/github/cfraser/graphguard/plugin/Schema$Property$Type;)Lio/github/cfraser/graphguard/plugin/Schema$Property$Type$List;
	public static synthetic fun copy$default (Lio/github/cfraser/graphguard/plugin/Schema$Property$Type$List;Lio/github/cfraser/graphguard/plugin/Schema$Property$Type;ILjava/lang/Object;)Lio/github/cfraser/graphguard/plugin/Schema$Property$Type$List;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getType ()Lio/github/cfraser/graphguard/plugin/Schema$Property$Type;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/plugin/Schema$Property$Type$LiteralString : io/github/cfraser/graphguard/plugin/Schema$Property$Type {
	public fun <init> (Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Lio/github/cfraser/graphguard/plugin/Schema$Property$Type$LiteralString;
	public static synthetic fun copy$default (Lio/github/cfraser/graphguard/plugin/Schema$Property$Type$LiteralString;Ljava/lang/String;ILjava/lang/Object;)Lio/github/cfraser/graphguard/plugin/Schema$Property$Type$LiteralString;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getValue ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/plugin/Schema$Property$Type$LocalDateTime : io/github/cfraser/graphguard/plugin/Schema$Property$Type {
	public static final field INSTANCE Lio/github/cfraser/graphguard/plugin/Schema$Property$Type$LocalDateTime;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/plugin/Schema$Property$Type$LocalTime : io/github/cfraser/graphguard/plugin/Schema$Property$Type {
	public static final field INSTANCE Lio/github/cfraser/graphguard/plugin/Schema$Property$Type$LocalTime;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract class io/github/cfraser/graphguard/plugin/Schema$Property$Type$Nullable : io/github/cfraser/graphguard/plugin/Schema$Property$Type {
	public synthetic fun <init> (Lkotlin/reflect/KClass;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/plugin/Schema$Property$Type$Nullable$Any : io/github/cfraser/graphguard/plugin/Schema$Property$Type$Nullable {
	public static final field INSTANCE Lio/github/cfraser/graphguard/plugin/Schema$Property$Type$Nullable$Any;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/plugin/Schema$Property$Type$Nullable$Boolean : io/github/cfraser/graphguard/plugin/Schema$Property$Type$Nullable {
	public static final field INSTANCE Lio/github/cfraser/graphguard/plugin/Schema$Property$Type$Nullable$Boolean;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/plugin/Schema$Property$Type$Nullable$Date : io/github/cfraser/graphguard/plugin/Schema$Property$Type$Nullable {
	public static final field INSTANCE Lio/github/cfraser/graphguard/plugin/Schema$Property$Type$Nullable$Date;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/plugin/Schema$Property$Type$Nullable$DateTime : io/github/cfraser/graphguard/plugin/Schema$Property$Type$Nullable {
	public static final field INSTANCE Lio/github/cfraser/graphguard/plugin/Schema$Property$Type$Nullable$DateTime;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/plugin/Schema$Property$Type$Nullable$Duration : io/github/cfraser/graphguard/plugin/Schema$Property$Type$Nullable {
	public static final field INSTANCE Lio/github/cfraser/graphguard/plugin/Schema$Property$Type$Nullable$Duration;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/plugin/Schema$Property$Type$Nullable$Float : io/github/cfraser/graphguard/plugin/Schema$Property$Type$Nullable {
	public static final field INSTANCE Lio/github/cfraser/graphguard/plugin/Schema$Property$Type$Nullable$Float;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/plugin/Schema$Property$Type$Nullable$Integer : io/github/cfraser/graphguard/plugin/Schema$Property$Type$Nullable {
	public static final field INSTANCE Lio/github/cfraser/graphguard/plugin/Schema$Property$Type$Nullable$Integer;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/plugin/Schema$Property$Type$Nullable$List : io/github/cfraser/graphguard/plugin/Schema$Property$Type$Nullable {
	public fun <init> (Lio/github/cfraser/graphguard/plugin/Schema$Property$Type;)V
	public final fun component1 ()Lio/github/cfraser/graphguard/plugin/Schema$Property$Type;
	public final fun copy (Lio/github/cfraser/graphguard/plugin/Schema$Property$Type;)Lio/github/cfraser/graphguard/plugin/Schema$Property$Type$Nullable$List;
	public static synthetic fun copy$default (Lio/github/cfraser/graphguard/plugin/Schema$Property$Type$Nullable$List;Lio/github/cfraser/graphguard/plugin/Schema$Property$Type;ILjava/lang/Object;)Lio/github/cfraser/graphguard/plugin/Schema$Property$Type$Nullable$List;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getType ()Lio/github/cfraser/graphguard/plugin/Schema$Property$Type;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/plugin/Schema$Property$Type$Nullable$LiteralString : io/github/cfraser/graphguard/plugin/Schema$Property$Type$Nullable {
	public fun <init> (Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Lio/github/cfraser/graphguard/plugin/Schema$Property$Type$Nullable$LiteralString;
	public static synthetic fun copy$default (Lio/github/cfraser/graphguard/plugin/Schema$Property$Type$Nullable$LiteralString;Ljava/lang/String;ILjava/lang/Object;)Lio/github/cfraser/graphguard/plugin/Schema$Property$Type$Nullable$LiteralString;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getValue ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/plugin/Schema$Property$Type$Nullable$LocalDateTime : io/github/cfraser/graphguard/plugin/Schema$Property$Type$Nullable {
	public static final field INSTANCE Lio/github/cfraser/graphguard/plugin/Schema$Property$Type$Nullable$LocalDateTime;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/plugin/Schema$Property$Type$Nullable$LocalTime : io/github/cfraser/graphguard/plugin/Schema$Property$Type$Nullable {
	public static final field INSTANCE Lio/github/cfraser/graphguard/plugin/Schema$Property$Type$Nullable$LocalTime;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/plugin/Schema$Property$Type$Nullable$String : io/github/cfraser/graphguard/plugin/Schema$Property$Type$Nullable {
	public static final field INSTANCE Lio/github/cfraser/graphguard/plugin/Schema$Property$Type$Nullable$String;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/plugin/Schema$Property$Type$Nullable$Time : io/github/cfraser/graphguard/plugin/Schema$Property$Type$Nullable {
	public static final field INSTANCE Lio/github/cfraser/graphguard/plugin/Schema$Property$Type$Nullable$Time;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/plugin/Schema$Property$Type$String : io/github/cfraser/graphguard/plugin/Schema$Property$Type {
	public static final field INSTANCE Lio/github/cfraser/graphguard/plugin/Schema$Property$Type$String;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/plugin/Schema$Property$Type$Time : io/github/cfraser/graphguard/plugin/Schema$Property$Type {
	public static final field INSTANCE Lio/github/cfraser/graphguard/plugin/Schema$Property$Type$Time;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/plugin/Schema$Property$Type$Union : io/github/cfraser/graphguard/plugin/Schema$Property$Type {
	public fun <init> (Ljava/util/List;)V
	public final fun component1 ()Ljava/util/List;
	public final fun copy (Ljava/util/List;)Lio/github/cfraser/graphguard/plugin/Schema$Property$Type$Union;
	public static synthetic fun copy$default (Lio/github/cfraser/graphguard/plugin/Schema$Property$Type$Union;Ljava/util/List;ILjava/lang/Object;)Lio/github/cfraser/graphguard/plugin/Schema$Property$Type$Union;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getTypes ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/plugin/Schema$Relationship : java/lang/Record {
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Z
	public final fun component5 ()Ljava/util/List;
	public final fun component6 ()Ljava/util/List;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLjava/util/List;Ljava/util/List;)Lio/github/cfraser/graphguard/plugin/Schema$Relationship;
	public static synthetic fun copy$default (Lio/github/cfraser/graphguard/plugin/Schema$Relationship;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLjava/util/List;Ljava/util/List;ILjava/lang/Object;)Lio/github/cfraser/graphguard/plugin/Schema$Relationship;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun isDirected ()Z
	public final fun metadata ()Ljava/util/List;
	public final fun name ()Ljava/lang/String;
	public final fun properties ()Ljava/util/List;
	public final fun source ()Ljava/lang/String;
	public final fun target ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/plugin/Schema$Relationship$Builder {
	public fun <init> ()V
	public final fun build ()Lio/github/cfraser/graphguard/plugin/Schema$Relationship;
	public final fun isDirected (Z)Lio/github/cfraser/graphguard/plugin/Schema$Relationship$Builder;
	public final fun metadata (Lio/github/cfraser/graphguard/plugin/Schema$Metadata;)Lio/github/cfraser/graphguard/plugin/Schema$Relationship$Builder;
	public final fun name (Ljava/lang/String;)Lio/github/cfraser/graphguard/plugin/Schema$Relationship$Builder;
	public final fun property (Lio/github/cfraser/graphguard/plugin/Schema$Property;)Lio/github/cfraser/graphguard/plugin/Schema$Relationship$Builder;
	public final fun source (Ljava/lang/String;)Lio/github/cfraser/graphguard/plugin/Schema$Relationship$Builder;
	public final fun target (Ljava/lang/String;)Lio/github/cfraser/graphguard/plugin/Schema$Relationship$Builder;
}

public final class io/github/cfraser/graphguard/plugin/Validator : io/github/cfraser/graphguard/Server$Plugin {
	public fun <init> (Lio/github/cfraser/graphguard/plugin/Validator$Rule;)V
	public fun <init> (Lio/github/cfraser/graphguard/plugin/Validator$Rule;Ljava/lang/Long;)V
	public synthetic fun <init> (Lio/github/cfraser/graphguard/plugin/Validator$Rule;Ljava/lang/Long;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun intercept-zufs0ZA (Ljava/lang/String;Lio/github/cfraser/graphguard/Bolt$Message;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun observe (Lio/github/cfraser/graphguard/Server$Event;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun then (Lio/github/cfraser/graphguard/Server$Plugin;)Lio/github/cfraser/graphguard/Server$Plugin;
}

public abstract interface class io/github/cfraser/graphguard/plugin/Validator$Rule {
	public abstract fun then (Lio/github/cfraser/graphguard/plugin/Validator$Rule;)Lio/github/cfraser/graphguard/plugin/Validator$Rule;
	public abstract fun validate-1eTvv0c (Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/plugin/Validator$Rule$DefaultImpls {
	public static fun then (Lio/github/cfraser/graphguard/plugin/Validator$Rule;Lio/github/cfraser/graphguard/plugin/Validator$Rule;)Lio/github/cfraser/graphguard/plugin/Validator$Rule;
}

public final class io/github/cfraser/graphguard/plugin/Validator$Rule$Violation {
	public static final synthetic fun box-impl (Ljava/lang/String;)Lio/github/cfraser/graphguard/plugin/Validator$Rule$Violation;
	public static fun constructor-impl (Ljava/lang/String;)Ljava/lang/String;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Ljava/lang/String;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Ljava/lang/String;Ljava/lang/String;)Z
	public final fun getMessage ()Ljava/lang/String;
	public fun hashCode ()I
	public static fun hashCode-impl (Ljava/lang/String;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Ljava/lang/String;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Ljava/lang/String;
}

