public final class io/github/cfraser/graphguard/validate/Patterns {
	public static final field INSTANCE Lio/github/cfraser/graphguard/validate/Patterns;
}

public final class io/github/cfraser/graphguard/validate/Patterns$UnlabeledEntity : io/github/cfraser/graphguard/validate/Rule {
	public fun <init> ()V
	public fun <init> (Ljava/util/Collection;)V
	public synthetic fun <init> (Ljava/util/Collection;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun then (Lio/github/cfraser/graphguard/validate/Rule;)Lio/github/cfraser/graphguard/validate/Rule;
	public fun validate-uxJLViw (Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;
}

public abstract interface class io/github/cfraser/graphguard/validate/Rule {
	public abstract fun then (Lio/github/cfraser/graphguard/validate/Rule;)Lio/github/cfraser/graphguard/validate/Rule;
	public abstract fun validate-uxJLViw (Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/validate/Rule$DefaultImpls {
	public static fun then (Lio/github/cfraser/graphguard/validate/Rule;Lio/github/cfraser/graphguard/validate/Rule;)Lio/github/cfraser/graphguard/validate/Rule;
}

public final class io/github/cfraser/graphguard/validate/Rule$Violation {
	public static final synthetic fun box-impl (Ljava/lang/String;)Lio/github/cfraser/graphguard/validate/Rule$Violation;
	public static fun constructor-impl (Ljava/lang/String;)Ljava/lang/String;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Ljava/lang/String;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Ljava/lang/String;Ljava/lang/String;)Z
	public final fun getMessage ()Ljava/lang/String;
	public fun hashCode ()I
	public static fun hashCode-impl (Ljava/lang/String;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Ljava/lang/String;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/validate/Schema : java/lang/Record, io/github/cfraser/graphguard/validate/Rule {
	public fun <init> (Ljava/lang/String;)V
	public final fun component1 ()Ljava/util/List;
	public final fun copy (Ljava/util/List;)Lio/github/cfraser/graphguard/validate/Schema;
	public static synthetic fun copy$default (Lio/github/cfraser/graphguard/validate/Schema;Ljava/util/List;ILjava/lang/Object;)Lio/github/cfraser/graphguard/validate/Schema;
	public fun equals (Ljava/lang/Object;)Z
	public final fun graphs ()Ljava/util/List;
	public fun hashCode ()I
	public fun then (Lio/github/cfraser/graphguard/validate/Rule;)Lio/github/cfraser/graphguard/validate/Rule;
	public fun toString ()Ljava/lang/String;
	public fun validate-uxJLViw (Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/validate/Schema$Graph : java/lang/Record {
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/util/List;
	public final fun copy (Ljava/lang/String;Ljava/util/List;)Lio/github/cfraser/graphguard/validate/Schema$Graph;
	public static synthetic fun copy$default (Lio/github/cfraser/graphguard/validate/Schema$Graph;Ljava/lang/String;Ljava/util/List;ILjava/lang/Object;)Lio/github/cfraser/graphguard/validate/Schema$Graph;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun name ()Ljava/lang/String;
	public final fun nodes ()Ljava/util/List;
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/validate/Schema$Metadata : java/lang/Record {
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;)Lio/github/cfraser/graphguard/validate/Schema$Metadata;
	public static synthetic fun copy$default (Lio/github/cfraser/graphguard/validate/Schema$Metadata;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lio/github/cfraser/graphguard/validate/Schema$Metadata;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun name ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
	public final fun value ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/validate/Schema$Node : java/lang/Record {
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/util/List;
	public final fun component3 ()Ljava/util/List;
	public final fun component4 ()Ljava/util/List;
	public final fun copy (Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/List;)Lio/github/cfraser/graphguard/validate/Schema$Node;
	public static synthetic fun copy$default (Lio/github/cfraser/graphguard/validate/Schema$Node;Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/List;ILjava/lang/Object;)Lio/github/cfraser/graphguard/validate/Schema$Node;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun metadata ()Ljava/util/List;
	public final fun name ()Ljava/lang/String;
	public final fun properties ()Ljava/util/List;
	public final fun relationships ()Ljava/util/List;
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/validate/Schema$Property : java/lang/Record {
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Lio/github/cfraser/graphguard/validate/Schema$Property$Type;
	public final fun component3 ()Ljava/util/List;
	public final fun copy (Ljava/lang/String;Lio/github/cfraser/graphguard/validate/Schema$Property$Type;Ljava/util/List;)Lio/github/cfraser/graphguard/validate/Schema$Property;
	public static synthetic fun copy$default (Lio/github/cfraser/graphguard/validate/Schema$Property;Ljava/lang/String;Lio/github/cfraser/graphguard/validate/Schema$Property$Type;Ljava/util/List;ILjava/lang/Object;)Lio/github/cfraser/graphguard/validate/Schema$Property;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun metadata ()Ljava/util/List;
	public final fun name ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
	public final fun type ()Lio/github/cfraser/graphguard/validate/Schema$Property$Type;
}

public abstract class io/github/cfraser/graphguard/validate/Schema$Property$Type {
	public synthetic fun <init> (Lkotlin/reflect/KClass;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
}

public final class io/github/cfraser/graphguard/validate/Schema$Property$Type$Any : io/github/cfraser/graphguard/validate/Schema$Property$Type {
	public static final field INSTANCE Lio/github/cfraser/graphguard/validate/Schema$Property$Type$Any;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/validate/Schema$Property$Type$Boolean : io/github/cfraser/graphguard/validate/Schema$Property$Type {
	public static final field INSTANCE Lio/github/cfraser/graphguard/validate/Schema$Property$Type$Boolean;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/validate/Schema$Property$Type$Date : io/github/cfraser/graphguard/validate/Schema$Property$Type {
	public static final field INSTANCE Lio/github/cfraser/graphguard/validate/Schema$Property$Type$Date;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/validate/Schema$Property$Type$DateTime : io/github/cfraser/graphguard/validate/Schema$Property$Type {
	public static final field INSTANCE Lio/github/cfraser/graphguard/validate/Schema$Property$Type$DateTime;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/validate/Schema$Property$Type$Duration : io/github/cfraser/graphguard/validate/Schema$Property$Type {
	public static final field INSTANCE Lio/github/cfraser/graphguard/validate/Schema$Property$Type$Duration;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/validate/Schema$Property$Type$Float : io/github/cfraser/graphguard/validate/Schema$Property$Type {
	public static final field INSTANCE Lio/github/cfraser/graphguard/validate/Schema$Property$Type$Float;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/validate/Schema$Property$Type$Integer : io/github/cfraser/graphguard/validate/Schema$Property$Type {
	public static final field INSTANCE Lio/github/cfraser/graphguard/validate/Schema$Property$Type$Integer;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/validate/Schema$Property$Type$List : io/github/cfraser/graphguard/validate/Schema$Property$Type {
	public fun <init> (Lio/github/cfraser/graphguard/validate/Schema$Property$Type;)V
	public final fun component1 ()Lio/github/cfraser/graphguard/validate/Schema$Property$Type;
	public final fun copy (Lio/github/cfraser/graphguard/validate/Schema$Property$Type;)Lio/github/cfraser/graphguard/validate/Schema$Property$Type$List;
	public static synthetic fun copy$default (Lio/github/cfraser/graphguard/validate/Schema$Property$Type$List;Lio/github/cfraser/graphguard/validate/Schema$Property$Type;ILjava/lang/Object;)Lio/github/cfraser/graphguard/validate/Schema$Property$Type$List;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getType ()Lio/github/cfraser/graphguard/validate/Schema$Property$Type;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/validate/Schema$Property$Type$LiteralString : io/github/cfraser/graphguard/validate/Schema$Property$Type {
	public fun <init> (Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Lio/github/cfraser/graphguard/validate/Schema$Property$Type$LiteralString;
	public static synthetic fun copy$default (Lio/github/cfraser/graphguard/validate/Schema$Property$Type$LiteralString;Ljava/lang/String;ILjava/lang/Object;)Lio/github/cfraser/graphguard/validate/Schema$Property$Type$LiteralString;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getValue ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/validate/Schema$Property$Type$LocalDateTime : io/github/cfraser/graphguard/validate/Schema$Property$Type {
	public static final field INSTANCE Lio/github/cfraser/graphguard/validate/Schema$Property$Type$LocalDateTime;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/validate/Schema$Property$Type$LocalTime : io/github/cfraser/graphguard/validate/Schema$Property$Type {
	public static final field INSTANCE Lio/github/cfraser/graphguard/validate/Schema$Property$Type$LocalTime;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract class io/github/cfraser/graphguard/validate/Schema$Property$Type$Nullable : io/github/cfraser/graphguard/validate/Schema$Property$Type {
	public synthetic fun <init> (Lkotlin/reflect/KClass;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
}

public final class io/github/cfraser/graphguard/validate/Schema$Property$Type$Nullable$Any : io/github/cfraser/graphguard/validate/Schema$Property$Type$Nullable {
	public static final field INSTANCE Lio/github/cfraser/graphguard/validate/Schema$Property$Type$Nullable$Any;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/validate/Schema$Property$Type$Nullable$Boolean : io/github/cfraser/graphguard/validate/Schema$Property$Type$Nullable {
	public static final field INSTANCE Lio/github/cfraser/graphguard/validate/Schema$Property$Type$Nullable$Boolean;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/validate/Schema$Property$Type$Nullable$Date : io/github/cfraser/graphguard/validate/Schema$Property$Type$Nullable {
	public static final field INSTANCE Lio/github/cfraser/graphguard/validate/Schema$Property$Type$Nullable$Date;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/validate/Schema$Property$Type$Nullable$DateTime : io/github/cfraser/graphguard/validate/Schema$Property$Type$Nullable {
	public static final field INSTANCE Lio/github/cfraser/graphguard/validate/Schema$Property$Type$Nullable$DateTime;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/validate/Schema$Property$Type$Nullable$Duration : io/github/cfraser/graphguard/validate/Schema$Property$Type$Nullable {
	public static final field INSTANCE Lio/github/cfraser/graphguard/validate/Schema$Property$Type$Nullable$Duration;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/validate/Schema$Property$Type$Nullable$Float : io/github/cfraser/graphguard/validate/Schema$Property$Type$Nullable {
	public static final field INSTANCE Lio/github/cfraser/graphguard/validate/Schema$Property$Type$Nullable$Float;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/validate/Schema$Property$Type$Nullable$Integer : io/github/cfraser/graphguard/validate/Schema$Property$Type$Nullable {
	public static final field INSTANCE Lio/github/cfraser/graphguard/validate/Schema$Property$Type$Nullable$Integer;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/validate/Schema$Property$Type$Nullable$List : io/github/cfraser/graphguard/validate/Schema$Property$Type$Nullable {
	public fun <init> (Lio/github/cfraser/graphguard/validate/Schema$Property$Type;)V
	public final fun component1 ()Lio/github/cfraser/graphguard/validate/Schema$Property$Type;
	public final fun copy (Lio/github/cfraser/graphguard/validate/Schema$Property$Type;)Lio/github/cfraser/graphguard/validate/Schema$Property$Type$Nullable$List;
	public static synthetic fun copy$default (Lio/github/cfraser/graphguard/validate/Schema$Property$Type$Nullable$List;Lio/github/cfraser/graphguard/validate/Schema$Property$Type;ILjava/lang/Object;)Lio/github/cfraser/graphguard/validate/Schema$Property$Type$Nullable$List;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getType ()Lio/github/cfraser/graphguard/validate/Schema$Property$Type;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/validate/Schema$Property$Type$Nullable$LiteralString : io/github/cfraser/graphguard/validate/Schema$Property$Type$Nullable {
	public fun <init> (Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Lio/github/cfraser/graphguard/validate/Schema$Property$Type$Nullable$LiteralString;
	public static synthetic fun copy$default (Lio/github/cfraser/graphguard/validate/Schema$Property$Type$Nullable$LiteralString;Ljava/lang/String;ILjava/lang/Object;)Lio/github/cfraser/graphguard/validate/Schema$Property$Type$Nullable$LiteralString;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getValue ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/validate/Schema$Property$Type$Nullable$LocalDateTime : io/github/cfraser/graphguard/validate/Schema$Property$Type$Nullable {
	public static final field INSTANCE Lio/github/cfraser/graphguard/validate/Schema$Property$Type$Nullable$LocalDateTime;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/validate/Schema$Property$Type$Nullable$LocalTime : io/github/cfraser/graphguard/validate/Schema$Property$Type$Nullable {
	public static final field INSTANCE Lio/github/cfraser/graphguard/validate/Schema$Property$Type$Nullable$LocalTime;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/validate/Schema$Property$Type$Nullable$String : io/github/cfraser/graphguard/validate/Schema$Property$Type$Nullable {
	public static final field INSTANCE Lio/github/cfraser/graphguard/validate/Schema$Property$Type$Nullable$String;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/validate/Schema$Property$Type$Nullable$Time : io/github/cfraser/graphguard/validate/Schema$Property$Type$Nullable {
	public static final field INSTANCE Lio/github/cfraser/graphguard/validate/Schema$Property$Type$Nullable$Time;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/validate/Schema$Property$Type$String : io/github/cfraser/graphguard/validate/Schema$Property$Type {
	public static final field INSTANCE Lio/github/cfraser/graphguard/validate/Schema$Property$Type$String;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/validate/Schema$Property$Type$Time : io/github/cfraser/graphguard/validate/Schema$Property$Type {
	public static final field INSTANCE Lio/github/cfraser/graphguard/validate/Schema$Property$Type$Time;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/validate/Schema$Property$Type$Union : io/github/cfraser/graphguard/validate/Schema$Property$Type {
	public fun <init> (Ljava/util/List;)V
	public final fun component1 ()Ljava/util/List;
	public final fun copy (Ljava/util/List;)Lio/github/cfraser/graphguard/validate/Schema$Property$Type$Union;
	public static synthetic fun copy$default (Lio/github/cfraser/graphguard/validate/Schema$Property$Type$Union;Ljava/util/List;ILjava/lang/Object;)Lio/github/cfraser/graphguard/validate/Schema$Property$Type$Union;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getTypes ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/validate/Schema$Relationship : java/lang/Record {
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Z
	public final fun component5 ()Ljava/util/List;
	public final fun component6 ()Ljava/util/List;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLjava/util/List;Ljava/util/List;)Lio/github/cfraser/graphguard/validate/Schema$Relationship;
	public static synthetic fun copy$default (Lio/github/cfraser/graphguard/validate/Schema$Relationship;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLjava/util/List;Ljava/util/List;ILjava/lang/Object;)Lio/github/cfraser/graphguard/validate/Schema$Relationship;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun isDirected ()Z
	public final fun metadata ()Ljava/util/List;
	public final fun name ()Ljava/lang/String;
	public final fun properties ()Ljava/util/List;
	public final fun source ()Ljava/lang/String;
	public final fun target ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

