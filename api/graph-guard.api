public final class io/github/cfraser/graphguard/Bolt {
	public static final field INSTANCE Lio/github/cfraser/graphguard/Bolt;
}

public final class io/github/cfraser/graphguard/Bolt$Begin : io/github/cfraser/graphguard/Bolt$Request {
	public fun <init> (Ljava/util/Map;)V
	public final fun component1 ()Ljava/util/Map;
	public final fun copy (Ljava/util/Map;)Lio/github/cfraser/graphguard/Bolt$Begin;
	public static synthetic fun copy$default (Lio/github/cfraser/graphguard/Bolt$Begin;Ljava/util/Map;ILjava/lang/Object;)Lio/github/cfraser/graphguard/Bolt$Begin;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getExtra ()Ljava/util/Map;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/Bolt$Commit : io/github/cfraser/graphguard/Bolt$Request {
	public static final field INSTANCE Lio/github/cfraser/graphguard/Bolt$Commit;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/Bolt$Discard : io/github/cfraser/graphguard/Bolt$Request {
	public fun <init> (Ljava/util/Map;)V
	public final fun component1 ()Ljava/util/Map;
	public final fun copy (Ljava/util/Map;)Lio/github/cfraser/graphguard/Bolt$Discard;
	public static synthetic fun copy$default (Lio/github/cfraser/graphguard/Bolt$Discard;Ljava/util/Map;ILjava/lang/Object;)Lio/github/cfraser/graphguard/Bolt$Discard;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getExtra ()Ljava/util/Map;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/Bolt$Failure : io/github/cfraser/graphguard/Bolt$Response {
	public fun <init> (Ljava/util/Map;)V
	public final fun component1 ()Ljava/util/Map;
	public final fun copy (Ljava/util/Map;)Lio/github/cfraser/graphguard/Bolt$Failure;
	public static synthetic fun copy$default (Lio/github/cfraser/graphguard/Bolt$Failure;Ljava/util/Map;ILjava/lang/Object;)Lio/github/cfraser/graphguard/Bolt$Failure;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getMetadata ()Ljava/util/Map;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/Bolt$Goodbye : io/github/cfraser/graphguard/Bolt$Request {
	public static final field INSTANCE Lio/github/cfraser/graphguard/Bolt$Goodbye;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/Bolt$Hello : io/github/cfraser/graphguard/Bolt$Request {
	public fun <init> (Ljava/util/Map;)V
	public final fun component1 ()Ljava/util/Map;
	public final fun copy (Ljava/util/Map;)Lio/github/cfraser/graphguard/Bolt$Hello;
	public static synthetic fun copy$default (Lio/github/cfraser/graphguard/Bolt$Hello;Ljava/util/Map;ILjava/lang/Object;)Lio/github/cfraser/graphguard/Bolt$Hello;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getExtra ()Ljava/util/Map;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/Bolt$Ignored : io/github/cfraser/graphguard/Bolt$Response {
	public static final field INSTANCE Lio/github/cfraser/graphguard/Bolt$Ignored;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/Bolt$Logoff : io/github/cfraser/graphguard/Bolt$Request {
	public static final field INSTANCE Lio/github/cfraser/graphguard/Bolt$Logoff;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/Bolt$Logon : io/github/cfraser/graphguard/Bolt$Request {
	public fun <init> (Ljava/util/Map;)V
	public final fun component1 ()Ljava/util/Map;
	public final fun copy (Ljava/util/Map;)Lio/github/cfraser/graphguard/Bolt$Logon;
	public static synthetic fun copy$default (Lio/github/cfraser/graphguard/Bolt$Logon;Ljava/util/Map;ILjava/lang/Object;)Lio/github/cfraser/graphguard/Bolt$Logon;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAuth ()Ljava/util/Map;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class io/github/cfraser/graphguard/Bolt$Message {
}

public final class io/github/cfraser/graphguard/Bolt$Pull : io/github/cfraser/graphguard/Bolt$Request {
	public fun <init> (Ljava/util/Map;)V
	public final fun component1 ()Ljava/util/Map;
	public final fun copy (Ljava/util/Map;)Lio/github/cfraser/graphguard/Bolt$Pull;
	public static synthetic fun copy$default (Lio/github/cfraser/graphguard/Bolt$Pull;Ljava/util/Map;ILjava/lang/Object;)Lio/github/cfraser/graphguard/Bolt$Pull;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getExtra ()Ljava/util/Map;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/Bolt$Record : io/github/cfraser/graphguard/Bolt$Response {
	public fun <init> (Ljava/util/List;)V
	public final fun component1 ()Ljava/util/List;
	public final fun copy (Ljava/util/List;)Lio/github/cfraser/graphguard/Bolt$Record;
	public static synthetic fun copy$default (Lio/github/cfraser/graphguard/Bolt$Record;Ljava/util/List;ILjava/lang/Object;)Lio/github/cfraser/graphguard/Bolt$Record;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getData ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class io/github/cfraser/graphguard/Bolt$Request : io/github/cfraser/graphguard/Bolt$Message {
}

public final class io/github/cfraser/graphguard/Bolt$Reset : io/github/cfraser/graphguard/Bolt$Request {
	public static final field INSTANCE Lio/github/cfraser/graphguard/Bolt$Reset;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class io/github/cfraser/graphguard/Bolt$Response : io/github/cfraser/graphguard/Bolt$Message {
}

public final class io/github/cfraser/graphguard/Bolt$Rollback : io/github/cfraser/graphguard/Bolt$Request {
	public static final field INSTANCE Lio/github/cfraser/graphguard/Bolt$Rollback;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/Bolt$Run : io/github/cfraser/graphguard/Bolt$Request {
	public fun <init> (Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/util/Map;
	public final fun component3 ()Ljava/util/Map;
	public final fun copy (Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;)Lio/github/cfraser/graphguard/Bolt$Run;
	public static synthetic fun copy$default (Lio/github/cfraser/graphguard/Bolt$Run;Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;ILjava/lang/Object;)Lio/github/cfraser/graphguard/Bolt$Run;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getExtra ()Ljava/util/Map;
	public final fun getParameters ()Ljava/util/Map;
	public final fun getQuery ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/Bolt$Success : io/github/cfraser/graphguard/Bolt$Response {
	public fun <init> (Ljava/util/Map;)V
	public final fun component1 ()Ljava/util/Map;
	public final fun copy (Ljava/util/Map;)Lio/github/cfraser/graphguard/Bolt$Success;
	public static synthetic fun copy$default (Lio/github/cfraser/graphguard/Bolt$Success;Ljava/util/Map;ILjava/lang/Object;)Lio/github/cfraser/graphguard/Bolt$Success;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getMetadata ()Ljava/util/Map;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/Bolt$Telemetry : io/github/cfraser/graphguard/Bolt$Request {
	public fun <init> (J)V
	public final fun component1 ()J
	public final fun copy (J)Lio/github/cfraser/graphguard/Bolt$Telemetry;
	public static synthetic fun copy$default (Lio/github/cfraser/graphguard/Bolt$Telemetry;JILjava/lang/Object;)Lio/github/cfraser/graphguard/Bolt$Telemetry;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getApi ()J
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/Schema {
	public fun <init> (Ljava/lang/String;)V
	public final fun component1 ()Ljava/util/Set;
	public final fun copy (Ljava/util/Set;)Lio/github/cfraser/graphguard/Schema;
	public static synthetic fun copy$default (Lio/github/cfraser/graphguard/Schema;Ljava/util/Set;ILjava/lang/Object;)Lio/github/cfraser/graphguard/Schema;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getGraphs ()Ljava/util/Set;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/Schema$Graph {
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/util/Set;
	public final fun copy (Ljava/lang/String;Ljava/util/Set;)Lio/github/cfraser/graphguard/Schema$Graph;
	public static synthetic fun copy$default (Lio/github/cfraser/graphguard/Schema$Graph;Ljava/lang/String;Ljava/util/Set;ILjava/lang/Object;)Lio/github/cfraser/graphguard/Schema$Graph;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getName ()Ljava/lang/String;
	public final fun getNodes ()Ljava/util/Set;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/Schema$Node {
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/util/Set;
	public final fun component3 ()Ljava/util/Set;
	public final fun copy (Ljava/lang/String;Ljava/util/Set;Ljava/util/Set;)Lio/github/cfraser/graphguard/Schema$Node;
	public static synthetic fun copy$default (Lio/github/cfraser/graphguard/Schema$Node;Ljava/lang/String;Ljava/util/Set;Ljava/util/Set;ILjava/lang/Object;)Lio/github/cfraser/graphguard/Schema$Node;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getName ()Ljava/lang/String;
	public final fun getProperties ()Ljava/util/Set;
	public final fun getRelationships ()Ljava/util/Set;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/Schema$Property {
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Lio/github/cfraser/graphguard/Schema$Property$Type;
	public final fun component3 ()Z
	public final fun component4 ()Z
	public final fun component5 ()Z
	public final fun copy (Ljava/lang/String;Lio/github/cfraser/graphguard/Schema$Property$Type;ZZZ)Lio/github/cfraser/graphguard/Schema$Property;
	public static synthetic fun copy$default (Lio/github/cfraser/graphguard/Schema$Property;Ljava/lang/String;Lio/github/cfraser/graphguard/Schema$Property$Type;ZZZILjava/lang/Object;)Lio/github/cfraser/graphguard/Schema$Property;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAllowsNullable ()Z
	public final fun getName ()Ljava/lang/String;
	public final fun getType ()Lio/github/cfraser/graphguard/Schema$Property$Type;
	public fun hashCode ()I
	public final fun isList ()Z
	public final fun isNullable ()Z
	public fun toString ()Ljava/lang/String;
}

public abstract class io/github/cfraser/graphguard/Schema$Property$Type {
	public synthetic fun <init> (Lkotlin/reflect/KClass;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/Schema$Property$Type$Any : io/github/cfraser/graphguard/Schema$Property$Type {
	public static final field INSTANCE Lio/github/cfraser/graphguard/Schema$Property$Type$Any;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/Schema$Property$Type$Boolean : io/github/cfraser/graphguard/Schema$Property$Type {
	public static final field INSTANCE Lio/github/cfraser/graphguard/Schema$Property$Type$Boolean;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/Schema$Property$Type$Date : io/github/cfraser/graphguard/Schema$Property$Type {
	public static final field INSTANCE Lio/github/cfraser/graphguard/Schema$Property$Type$Date;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/Schema$Property$Type$DateTime : io/github/cfraser/graphguard/Schema$Property$Type {
	public static final field INSTANCE Lio/github/cfraser/graphguard/Schema$Property$Type$DateTime;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/Schema$Property$Type$Duration : io/github/cfraser/graphguard/Schema$Property$Type {
	public static final field INSTANCE Lio/github/cfraser/graphguard/Schema$Property$Type$Duration;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/Schema$Property$Type$Float : io/github/cfraser/graphguard/Schema$Property$Type {
	public static final field INSTANCE Lio/github/cfraser/graphguard/Schema$Property$Type$Float;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/Schema$Property$Type$Integer : io/github/cfraser/graphguard/Schema$Property$Type {
	public static final field INSTANCE Lio/github/cfraser/graphguard/Schema$Property$Type$Integer;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/Schema$Property$Type$LocalDateTime : io/github/cfraser/graphguard/Schema$Property$Type {
	public static final field INSTANCE Lio/github/cfraser/graphguard/Schema$Property$Type$LocalDateTime;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/Schema$Property$Type$LocalTime : io/github/cfraser/graphguard/Schema$Property$Type {
	public static final field INSTANCE Lio/github/cfraser/graphguard/Schema$Property$Type$LocalTime;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/Schema$Property$Type$String : io/github/cfraser/graphguard/Schema$Property$Type {
	public static final field INSTANCE Lio/github/cfraser/graphguard/Schema$Property$Type$String;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/Schema$Property$Type$Time : io/github/cfraser/graphguard/Schema$Property$Type {
	public static final field INSTANCE Lio/github/cfraser/graphguard/Schema$Property$Type$Time;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/Schema$Relationship {
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Z
	public final fun component5 ()Ljava/util/Set;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLjava/util/Set;)Lio/github/cfraser/graphguard/Schema$Relationship;
	public static synthetic fun copy$default (Lio/github/cfraser/graphguard/Schema$Relationship;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLjava/util/Set;ILjava/lang/Object;)Lio/github/cfraser/graphguard/Schema$Relationship;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getName ()Ljava/lang/String;
	public final fun getProperties ()Ljava/util/Set;
	public final fun getSource ()Ljava/lang/String;
	public final fun getTarget ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun isDirected ()Z
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/Schema$Validator : io/github/cfraser/graphguard/Server$Plugin {
	public fun <init> (Lio/github/cfraser/graphguard/Schema;Ljava/lang/Long;)V
	public synthetic fun <init> (Lio/github/cfraser/graphguard/Schema;Ljava/lang/Long;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun intercept (Lio/github/cfraser/graphguard/Bolt$Message;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun observe (Lio/github/cfraser/graphguard/Server$Event;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun then (Lio/github/cfraser/graphguard/Server$Plugin;)Lio/github/cfraser/graphguard/Server$Plugin;
}

public final class io/github/cfraser/graphguard/Server : java/lang/Runnable {
	public fun <init> (Ljava/net/URI;Lio/github/cfraser/graphguard/Server$Plugin;Ljava/net/InetSocketAddress;Ljava/lang/Integer;)V
	public synthetic fun <init> (Ljava/net/URI;Lio/github/cfraser/graphguard/Server$Plugin;Ljava/net/InetSocketAddress;Ljava/lang/Integer;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getAddress ()Ljava/net/InetSocketAddress;
	public final fun getGraph ()Ljava/net/URI;
	public fun run ()V
}

public final class io/github/cfraser/graphguard/Server$Connected : io/github/cfraser/graphguard/Server$Event {
	public fun <init> (Lio/github/cfraser/graphguard/Server$Connection;)V
	public final fun component1 ()Lio/github/cfraser/graphguard/Server$Connection;
	public final fun copy (Lio/github/cfraser/graphguard/Server$Connection;)Lio/github/cfraser/graphguard/Server$Connected;
	public static synthetic fun copy$default (Lio/github/cfraser/graphguard/Server$Connected;Lio/github/cfraser/graphguard/Server$Connection;ILjava/lang/Object;)Lio/github/cfraser/graphguard/Server$Connected;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getConnection ()Lio/github/cfraser/graphguard/Server$Connection;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class io/github/cfraser/graphguard/Server$Connection {
	public abstract fun getAddress ()Ljava/net/InetSocketAddress;
}

public final class io/github/cfraser/graphguard/Server$Connection$Client : io/github/cfraser/graphguard/Server$Connection {
	public fun <init> (Ljava/net/InetSocketAddress;)V
	public final fun component1 ()Ljava/net/InetSocketAddress;
	public final fun copy (Ljava/net/InetSocketAddress;)Lio/github/cfraser/graphguard/Server$Connection$Client;
	public static synthetic fun copy$default (Lio/github/cfraser/graphguard/Server$Connection$Client;Ljava/net/InetSocketAddress;ILjava/lang/Object;)Lio/github/cfraser/graphguard/Server$Connection$Client;
	public fun equals (Ljava/lang/Object;)Z
	public fun getAddress ()Ljava/net/InetSocketAddress;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/Server$Connection$Graph : io/github/cfraser/graphguard/Server$Connection {
	public fun <init> (Ljava/net/InetSocketAddress;)V
	public final fun component1 ()Ljava/net/InetSocketAddress;
	public final fun copy (Ljava/net/InetSocketAddress;)Lio/github/cfraser/graphguard/Server$Connection$Graph;
	public static synthetic fun copy$default (Lio/github/cfraser/graphguard/Server$Connection$Graph;Ljava/net/InetSocketAddress;ILjava/lang/Object;)Lio/github/cfraser/graphguard/Server$Connection$Graph;
	public fun equals (Ljava/lang/Object;)Z
	public fun getAddress ()Ljava/net/InetSocketAddress;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/Server$Disconnected : io/github/cfraser/graphguard/Server$Event {
	public fun <init> (Lio/github/cfraser/graphguard/Server$Connection;)V
	public final fun component1 ()Lio/github/cfraser/graphguard/Server$Connection;
	public final fun copy (Lio/github/cfraser/graphguard/Server$Connection;)Lio/github/cfraser/graphguard/Server$Disconnected;
	public static synthetic fun copy$default (Lio/github/cfraser/graphguard/Server$Disconnected;Lio/github/cfraser/graphguard/Server$Connection;ILjava/lang/Object;)Lio/github/cfraser/graphguard/Server$Disconnected;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getConnection ()Lio/github/cfraser/graphguard/Server$Connection;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class io/github/cfraser/graphguard/Server$Event {
}

public abstract interface class io/github/cfraser/graphguard/Server$Plugin {
	public abstract fun intercept (Lio/github/cfraser/graphguard/Bolt$Message;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun observe (Lio/github/cfraser/graphguard/Server$Event;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun then (Lio/github/cfraser/graphguard/Server$Plugin;)Lio/github/cfraser/graphguard/Server$Plugin;
}

public final class io/github/cfraser/graphguard/Server$Plugin$DefaultImpls {
	public static fun intercept (Lio/github/cfraser/graphguard/Server$Plugin;Lio/github/cfraser/graphguard/Bolt$Message;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun observe (Lio/github/cfraser/graphguard/Server$Plugin;Lio/github/cfraser/graphguard/Server$Event;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun then (Lio/github/cfraser/graphguard/Server$Plugin;Lio/github/cfraser/graphguard/Server$Plugin;)Lio/github/cfraser/graphguard/Server$Plugin;
}

public final class io/github/cfraser/graphguard/Server$Proxied : io/github/cfraser/graphguard/Server$Event {
	public fun <init> (Lio/github/cfraser/graphguard/Server$Connection;Lio/github/cfraser/graphguard/Bolt$Message;Lio/github/cfraser/graphguard/Server$Connection;Lio/github/cfraser/graphguard/Bolt$Message;)V
	public final fun component1 ()Lio/github/cfraser/graphguard/Server$Connection;
	public final fun component2 ()Lio/github/cfraser/graphguard/Bolt$Message;
	public final fun component3 ()Lio/github/cfraser/graphguard/Server$Connection;
	public final fun component4 ()Lio/github/cfraser/graphguard/Bolt$Message;
	public final fun copy (Lio/github/cfraser/graphguard/Server$Connection;Lio/github/cfraser/graphguard/Bolt$Message;Lio/github/cfraser/graphguard/Server$Connection;Lio/github/cfraser/graphguard/Bolt$Message;)Lio/github/cfraser/graphguard/Server$Proxied;
	public static synthetic fun copy$default (Lio/github/cfraser/graphguard/Server$Proxied;Lio/github/cfraser/graphguard/Server$Connection;Lio/github/cfraser/graphguard/Bolt$Message;Lio/github/cfraser/graphguard/Server$Connection;Lio/github/cfraser/graphguard/Bolt$Message;ILjava/lang/Object;)Lio/github/cfraser/graphguard/Server$Proxied;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getDestination ()Lio/github/cfraser/graphguard/Server$Connection;
	public final fun getReceived ()Lio/github/cfraser/graphguard/Bolt$Message;
	public final fun getSent ()Lio/github/cfraser/graphguard/Bolt$Message;
	public final fun getSource ()Lio/github/cfraser/graphguard/Server$Connection;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/Server$Started : io/github/cfraser/graphguard/Server$Event {
	public static final field INSTANCE Lio/github/cfraser/graphguard/Server$Started;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/cfraser/graphguard/Server$Stopped : io/github/cfraser/graphguard/Server$Event {
	public static final field INSTANCE Lio/github/cfraser/graphguard/Server$Stopped;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

